/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.biz.UserBiz;
import com.common.DateUtils;
import com.common.MySecurity;
import com.entity.TBGPSDATA;
import com.entity.TBUSER;
import com.hook.Reflector;

/** 
 * MyEclipse Struts
 * Creation date: 01-15-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class checknetAction extends Action {
	/*
	 * Generated Methods
	 */

	private UserBiz userBiz;
	public void setUserBiz(UserBiz userBiz) {
		this.userBiz = userBiz;
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		 //如果不需要回复则关闭socket再继续，以节约流量
		try
		{
			  Object myrequest = Reflector.getAccessibleField(request, "request");
	          Object coyoteRequest =  Reflector.getAccessibleField(myrequest, "coyoteRequest");
	          Object hook = Reflector.getAccessibleField(coyoteRequest, "hook");
	          Object socket = Reflector.getAccessibleField(hook, "socket");	          
	          Socket sk = Socket.class.cast(socket);
	          OutputStream out=sk.getOutputStream();
	          out.write(0x01);
	          out.flush();
	          //ps.flush();
	          //ps.close();
	          sk.close();
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
		return null;
	}
}