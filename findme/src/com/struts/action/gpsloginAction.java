/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.biz.UserBiz;
import com.common.DateUtils;
import com.common.MySecurity;
import com.dao.myuserdao;
import com.entity.TBGPSDATA;
import com.entity.TBUSER;
import com.hook.Reflector;

/** 
 * MyEclipse Struts
 * Creation date: 03-19-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class gpsloginAction extends Action {
	
	
	/*
	 * Generated Methods
	 */
	private UserBiz userBiz;
	public void setUserBiz(UserBiz userBiz) {
		this.userBiz = userBiz;
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String username=request.getParameter("u");
		String password=request.getParameter("p"); 
		String needreply=request.getParameter("r");
		String strreply;
		if(username != null && !username.equals("") 
				&& password!=null && !password.equals(""))
		{	
	
			username=MySecurity.decrypt(username);
			password=MySecurity.decrypt(password);
			TBUSER u = new TBUSER();
			u.setUsername(username);
			u.setPassword(password);
			u = this.userBiz.login(u);
			if(u == null)
			{
				strreply="1";
			}
			else
			{
				double lat=0;
				double lng=0;
				double alt=0;
				double speed=0;
				long nowtime=0;
				String strlat=request.getParameter("a");
				if(strlat!=null)
				{
					lat=Double.parseDouble(strlat);
				}
				String strlng=request.getParameter("n");
				if(strlng!=null)
				{
					lng=Double.parseDouble(strlng);
				}
				if(lat==0 || lng==0)
				{
					return null;
				}
				String stralt=request.getParameter("l");
				if(stralt!=null)
				{
					alt=Double.parseDouble(stralt);
				}
				
				String strspeed=request.getParameter("s");
				if(strspeed!=null)
				{
					speed=Double.parseDouble(strspeed);
				}	
				String gpstime=request.getParameter("t");
				if(gpstime!=null)
				{
					nowtime=Long.parseLong(gpstime);
					Date nowdate=new Date();
					nowdate.setTime(nowtime*1000);
					gpstime=DateUtils.dateToStr(nowdate);
				}
				String angle=request.getParameter("j");
				TBGPSDATA gpsdata = new TBGPSDATA();
			    gpsdata.setLat(lat);
			    gpsdata.setLng(lng);
			    gpsdata.setAlt(alt);
			    gpsdata.setAngle(angle);
			    gpsdata.setSpeed(speed);
			    gpsdata.setGpstime(gpstime);
			    gpsdata.setUpdatetime(DateUtils.dateToStr(new Date()));
				this.userBiz.updategps(u, gpsdata);
				strreply="0";
			}
			if(needreply!=null && needreply.equals("y"))
			{
			  try 
			  {
	            PrintWriter out = response.getWriter();
	            out.write(strreply); //stand for the report success
	            out.close();
		      } 
			  catch (IOException e)
		      {
		        e.printStackTrace();
		      }
			}
			else
			{
			    //如果不需要回复则关闭socket再继续，以节约流量
				try
				{
					  Object myrequest = Reflector.getAccessibleField(request, "request");
			          Object coyoteRequest =  Reflector.getAccessibleField(myrequest, "coyoteRequest");
			          Object hook = Reflector.getAccessibleField(coyoteRequest, "hook");
			          Object socket = Reflector.getAccessibleField(hook, "socket");
			          Socket sk = Socket.class.cast(socket);
			          sk.close();
				}
				catch(Exception ex)
				{
					ex.printStackTrace();
				}
				return null;
			}
		}
		return null;
	}
	
}

